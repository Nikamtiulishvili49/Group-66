1 #  კომენტარის სახით ახსენით, თუ რა დანიშნულება აქვს სიებს (lists) პითონში, დეტალურად განიხილეთ 
# list-ების სინტაქსი და ახსენით თუ როგორ მუშაობს ინდექსინგი.

# ლისტები არის სია სადაც წერია რამდენიმე ელემენტები,რიცხვი,სტრინგი,integer,float და ა.შ,ინდექსების ათვლა ლისტებში
#  იწყება 0 იდან,ლისტები საშუალებას გვაძლევს შევინახოთ ჩვენთვის სასურველი ელემენტები მასში,



2 #  შექმენით სია, სადაც შეინახავთ ჯანსაღ საკვებ პროდუქტებს. შემდეგ კი ტერმინალში დაბეჭდეთ ეს სია.

healthly_food = ["apple", "cherry", "banana", "Avocado"]
print(healthly_food)



3 # შექმენით სია, სადაც შეინახავთ თქვენი საყვარელი მანქანის მოდელებს. დაბეჭდეთ ამ სიის მესამე ელემენტი.

my_favorite_cars = ["Bmw", "Mercedes", "Ferari", "Lamborgini"]
print(my_favorite_cars[3])



4 #  შექმენით რიცხვების სია და შეინახეთ 10+ ელემენტი. შემდეგ დაბეჭდეთ ამ სიის ბოლო ელემენტი უარყოფითი ინდექსინგის გამოყენებით.

numbers = [5,10,15,20,25,30,35,40,45,50,55,60]
print(numbers[-1])




5 # შექმენით სია და მასში შეინახეთ 5 ფილმის სახელწოდება. დაბეჭდეთ ამ სიის მეორე და 
# მეოთხე ინდექსზე მდგომი ელემენტები. (sclicing-ის გამოყენების გარეშე). 

films = ["Titanic", "Personal bodyguard", "Once Upon a Time in America", "Rush hour", "spider man"]   

print(films[1])
print(films[3])



6 # ვისაც წინა საშინაო დავალება არ გაგიკეთებიათ, დაფიქრდით და აუცილებლად გააკეთეთ:
# მომხმარებელს შემოატანინეთ რიცხვი და დაწერეთ პროგრამა, რომელიც შეამოწმებს ეს რიცხვი მარტივია თუ არა. 
# (მარტივია რიცხვი, თუ მას მხოლოდ ორი გამყოფი აქვს). მინიშნება: გამოიყენეთ For loop და % გამყოფი ოპერატორი, 
# ასევე აუცილებლად დაგჭირდებათ პროგრამაში Boolean ნიშვნელობების გამოყენება (True და False).

# გაკეთებული მაქ

num = int(input("enter number: "))

if num <= 1:
    is_prime_num = False
else:
     for i in range(2, num):
        if num % i == 0:  
            is_prime = False  
            break  
if is_prime:
    print("num is True")
else:
    print("num isn't True")




7 # გაიარეთ Sololearn - More on conditional statements-ებიდან lists ჩათვლით


