1 # დაასრულეთ ეს სექცია



2 # უყურეთ ამ ვიდეოს 


3 #  კომენტარის სახით ჩამოწერეთ და დეტალურად განიხილეთ Control Flow-ს შემადგენელი 3 კომპონენტი.




4 # კომენტარის სახით დაწერეთ თუ რას ნიშნავს იტერაცია და რით განსხვავდება for და while ციკლი ერთმანეთისგან. 
# დაწერე ორივე ციკლის თითო მაგალითი.

# იტერაცია არის რაიმე პროცესის რამდენჯერმე გამეორება
# for loop ში დეველოპერები განვსაზღვრავთ თუ რამდენჯერ გამოვიტანთ კონკრეტულ სიტყვას,
# ხოლო while loop ში არ გვაქ განსაზღვრული იტერაციების რაოდენობა.

for i in range(10): 
    print(i)

while i < 5:
    print("nika")
i += 5



5 # დაწერეთ პროგრამა, რომელიც 1-დან 10-მდე რიცხვების ჯამს დაითვლის for ციკლით.

sum = 0

for i in range(1, 11):
    sum += i
print("The sum of numbers from 1 to 10 is", sum)




6 #  დაწერეთ მეხუთე დავალების მსგასი პროგრამა, თუმცა ამჯერად While loop-ის გამოყენებით.

sum = 0

i = 1

while i <= 10:
    sum += i 
    i += 1
print("The sum of numbers from 1 to 10 is", sum)




7 #  გამოიყენეთ for ციკლი და დაბეჭდეთ 2-დან 20-ის ჩათვლით ყველა ლუწი რიცხვი.

for i in range(2, 21):
    if i % 2 == 0:
      print(i)



8 #  While ციკლის საშუალებით დაბეჭდეთ ყველა კენტი რიცხვი 30-დან 70-მდე.

i = 31

while i <= 70:
     i += 2
print(i)



9 # კომენტარის სახით ახსენით თუ როგორ მუშაობს Indexing პითონში და განმარტეთ უშუალოდ Index-ის მნიშვნელობა.

# indexing გვეხმარება კოლექციაში კონკრეტული ელემენტის მოძებნაში მაგ:

cars = ["Bmw", "Mercedes", "Audi"]
#       0 ინდქს.  1 ინდქს.  2 ინდქს.




10 # რთული:
# მომხმარებელს შემოატანინეთ რიცხვი და დაწერეთ პროგრამა, რომელიც შეამოწმებს ეს რიცხვი მარტივია თუ არა.
#  (მარტივია რიცხვი, თუ მას მხოლოდ ორი გამყოფი აქვს). მინიშნება: გამოიყენეთ For loop და % გამყოფი ოპერატორი,
#  ასევე აუცილებლად დაგჭირდებათ პროგრამაში Boolean ნიშვნელობების გამოყენება (True და False).


num = int(input("enter number: "))

if num <= 1:
    is_prime_num = False
else:
     for i in range(2, num):
        if num % i == 0:  
            is_prime = False  
            break  
if is_prime:
    print("num is True")
else:
    print("num isn't True")




11 # მომხმარებელს შემოატანინეთ ნებისმიერი რიცხვი, შემდეგ კი 1-დან მომხმარებლის მიერ შეყვანილი რიცხვის ჩათვლით 
# არსებული ყველა რიცხვის ჯამი გამოთვალეთ და გამოიტანეთ ეკრანზე.


num = int(input("Enter a number: "))

sum_numbers = 0

for i in range(1, num + 1):
    sum_numbers += i

print("The sum of numbers from 1 to", num, "is:", sum_numbers)




12 # დააკვირდით მოცემულ flowchart-ს, ახსენით მისი მუშაობის პრინციპი. მისი მიხედვით შეადგინეთ პროგრამა და დაწერეთ
# რა შედეგს გამოიტანს კოდი იმ შემთხვევაში როცა მომხმარებელი არის 14 წლის და არ არის სტუდენტი.


age = int(input("Enter your age: "))
is_student = input("Are you a student? (yes or no): ")

if age == 14 and is_student == "no":
    print("You are 14 years old and not a student.")
else:
    print("Condition not met.")
